{"type":"entity","entityType":"user","name":"marcuscastelo","observations":["User identified as marcuscastelo for this session.","Attempted to use mcp_memory_add_observations for session logging; error due to missing entity, so entity creation was proposed and now completed.","System prompt for agent memory management was reviewed and confirmed as a guide for using the memory tool.","All phases were tracked via issues #882 (epic), #883 (schema/domain), #887 (infra), #884 (app), #885 (UI), and PR #908 (UI migration in progress).","Barrel index.ts files are now banned in this codebase. See #file:copilot-instructions.md for rationale. All such files must be removed or left blank with a comment."]}
{"type":"entity","entityType":"epic","name":"Item/ItemGroup Unification for Recursive Recipes","observations":["Unify Item and ItemGroup entities into a single hierarchical structure to support recursive recipes and eliminate semantic contradictions.","Strategic goals: prepare for recursive recipes, eliminate semantic contradictions, reduce technical debt, simplify architecture.","Proposed solution: UnifiedItem type with recursive reference supporting food, recipe, and group.","Success criteria: single entity supports all behaviors, recursive recipes via config, no breaking changes, performance maintained, 100% test coverage.","Risk mitigation: feature flags, comprehensive testing, rollback plan, performance monitoring.","Session on June 27, 2025: User requested to migrate Recipe entity and all related flows from legacy Item[] to UnifiedItem[] in-memory, while maintaining Item[] (food only) for database compatibility. Migration included auditing, refactoring, conversion utilities, persistence adaptation, test updates, and documentation.","UnifiedItem type introduced: recursive reference for food, recipe, group; enables recursive recipes and eliminates semantic contradictions.","Migration strategy included: feature flags, comprehensive testing, rollback plans, and performance monitoring.","Each phase included detailed acceptance criteria, risk mitigation, and documentation updates.","EPIC-882: This epic will be suspended for v0.13.0 and resumed as soon as v0.14.0 starts being the rc/ branch."]}
{"type":"entity","entityType":"phase","name":"#883 Phase 1: Schema & Domain Layer","observations":["Refactor domain and schema layers to unify Item and ItemGroup into UnifiedItem.","Scope: domain logic, schema definitions, migration utilities, macro calculation, hierarchy utilities, conversion utilities, unit and performance tests.","Motivation: eliminate contradictions, technical debt, enable recursive recipes, simplify architecture.","Acceptance: UnifiedItem schema, new domain ops, migration utilities, feature flag, 100% test coverage, performance, docs.","Dependencies: current Item/ItemGroup schemas, MacroNutrients schema, existing domain ops."]}
{"type":"entity","entityType":"phase","name":"#887 Phase 2: Infrastructure Layer","observations":["Refactor infrastructure layer for unified Item/ItemGroup structure: DB schema, repos, migration utilities, rollback, query optimization, validation, backup/restore, monitoring.","Motivation: enable recursive recipes, eliminate technical debt, enable future app/UI migrations.","Acceptance: unified schema, data migration, queries work, performance, rollback, tests, migration scripts, benchmarks, docs.","Dependencies: Phase 1 (domain), blocks Phase 3 (app), Phase 4 (UI)."]}
{"type":"entity","entityType":"phase","name":"#884 Phase 3: Application Layer","observations":["Refactor application layer services and business logic for unified Item/ItemGroup structure.","Scope: app services for diet/meal/day-diet, business logic, CRUD, aggregation, traversal, event handlers, controllers, utilities, tests.","Motivation: leverage unified model, eliminate technical debt, enable recursive recipes, ensure maintainability, enable future UI/API changes.","Acceptance: all app services use UnifiedItem, legacy logic removed/wrapped, CRUD/aggregation/traversal updated, tests, no breaking changes, performance, docs.","Dependencies: Phase 1 (domain), Phase 2 (infra), blocks Phase 4 (UI)."]}
{"type":"entity","entityType":"phase","name":"#885 Phase 4: UI Migration","observations":["Refactor and migrate all UI components, modals, and user interactions to support unified Item/ItemGroup structure.","Scope: all UI components, modals, forms, dialogs, state management, CRUD, aggregation, traversal, remove/adapt legacy UI logic, update tests.","Motivation: leverage unified model, eliminate technical debt, enable recursive recipes, ensure maintainability, enable future enhancements.","Acceptance: all UI uses UnifiedItem, legacy UI logic removed/adapted, CRUD/aggregation/traversal updated, tests, no breaking changes, performance, docs.","Dependencies: Phase 1 (domain), Phase 2 (infra), Phase 3 (app).","EPIC-882 Successfully implemented recipe editing capability in UnifiedItemEditModal. Users can now open RecipeEditModal directly from UnifiedItem interface when editing recipe items.","EPIC-882 Added recipe edit button (✏️) that appears for recipe items when original recipe is available, enabling direct recipe editing from unified interface.","EPIC-882 Implemented proper repository integration with recipe save/delete handlers, including synchronization of changes back to UnifiedItem state.","EPIC-882 All changes passed comprehensive validation with 100% test coverage and no breaking changes.","Phase 4: UI Migration has been merged as of June 28, 2025."]}
{"type":"entity","entityType":"pull_request","name":"PR #908","observations":["Implements UnifiedItem UI migration, macro calculation refactor, and console interception features.","Adds UnifiedItemView and supporting components for hierarchical item display and editing.","Refactors macro calculation utilities to support UnifiedItem recursively, replacing legacy Item/ItemGroup logic.","Updates environment config to support ENABLE_UNIFIED_ITEM_STRUCTURE as a boolean, defaulting to false, for feature flag control.","Adds console interception utilities and tests for debugging and export/sharing of logs.","Removes or replaces all legacy Item/ItemGroup UI and logic with UnifiedItem-based implementations. Updates macro overflow logic and tests for UnifiedItem compatibility.","All changes are covered by comprehensive tests and maintain backward compatibility via feature flag.","Previously, PR implementation details were saved under the user entity instead of a dedicated PR entity. This was incorrect. From now on, each PR will have its own entity for implementation details, and all such process improvements or corrections will be recorded in memory.","PR implementation details: UnifiedItem UI migration, macro calculation refactor, and console interception features.","UnifiedItemView and supporting components were added for hierarchical item display and editing. Macro calculation utilities were refactored to support UnifiedItem recursively, replacing legacy Item/ItemGroup logic.","Environment config was updated to support ENABLE_UNIFIED_ITEM_STRUCTURE as a boolean, defaulting to false, for feature flag control.","Console interception utilities and tests were added for debugging and export/sharing of logs.","All legacy Item/ItemGroup UI and logic were removed or replaced with UnifiedItem-based implementations. Macro overflow logic and tests were updated for UnifiedItem compatibility.","Comprehensive regression test checklist in PR #908 covers all phases, with >95% test coverage and validation of all critical workflows, performance, and architecture compliance."]}
{"type":"entity","entityType":"governance_rule","name":"memory_governance_rules","observations":["All new memory observations related to project phases must be prefixed by the corresponding epic number.","Example: 'EPIC-123 Phase 1: Schema & Domain Layer'"]}
{"type":"entity","name":"Issue #850","entityType":"github_issue","observations":["Create Reusable ContextMenuItem Components - refactoring issue to eliminate duplicated markup in context menus","Located in unified UnifiedItemActions.tsx component after Item/ItemGroup unification","Issue successfully implemented on June 28, 2025 by creating ContextMenuEditItem, ContextMenuCopyItem, ContextMenuDeleteItem components","Eliminated ~40 lines of duplicated markup while preserving all existing styling and functionality","Created reusable components in src/sections/common/components/contextMenuItems/ directory","All validation scripts passed: TypeScript compilation, ESLint, tests (236 passed), and code quality checks","Committed as 84e52006 with conventional commit message including 'Closes #850'","Labels: complexity-low, refactor, ui - correctly categorized as low-complexity UI refactoring"]}
{"type":"entity","name":"Issue #851","entityType":"github_issue","observations":["Standardize Button Styles with Reusable Components - completed on June 29, 2025","Created reusable Button, PrimaryButton, GhostButton, and ErrorButton components in src/sections/common/components/buttons/","Replaced manual class combinations in 13+ locations across codebase (exceeding requirement of 10+)","Components support common props: size (xs, sm, md, lg), fullWidth, noAnimation, disabled, loading","All existing visual appearance and behavior preserved","All accessibility attributes and standard button props maintained","All validation scripts passed: TypeScript compilation, ESLint, tests (236 passed), and code quality checks","Committed as c3847317 with conventional commit message including 'Closes #851'","Labels: improvement, complexity-low, ui - correctly categorized as low-complexity UI improvement","Files updated: DayMeals.tsx, RecipeEditModal.tsx, DeleteDayButton.tsx, CreateBlankDayButton.tsx, CopyLastDayButton.tsx, BottomNavigation.tsx, MacroTargets.tsx, EANInsertModal.tsx","Successfully eliminates ~50+ lines of duplicated button markup while improving maintainability and design consistency"]}
{"type":"relation","from":"#883 Phase 1: Schema & Domain Layer","relationType":"part of","to":"Item/ItemGroup Unification for Recursive Recipes"}
{"type":"relation","from":"#887 Phase 2: Infrastructure Layer","relationType":"part of","to":"Item/ItemGroup Unification for Recursive Recipes"}
{"type":"relation","from":"#884 Phase 3: Application Layer","relationType":"part of","to":"Item/ItemGroup Unification for Recursive Recipes"}
{"type":"relation","from":"#885 Phase 4: UI Migration","relationType":"part of","to":"Item/ItemGroup Unification for Recursive Recipes"}
{"type":"relation","from":"#887 Phase 2: Infrastructure Layer","relationType":"depends on","to":"#883 Phase 1: Schema & Domain Layer"}
{"type":"relation","from":"#884 Phase 3: Application Layer","relationType":"depends on","to":"#887 Phase 2: Infrastructure Layer"}
{"type":"relation","from":"#885 Phase 4: UI Migration","relationType":"depends on","to":"#884 Phase 3: Application Layer"}
{"type":"relation","from":"PR #908","relationType":"implements","to":"#885 Phase 4: UI Migration"}
{"type":"relation","from":"PR #908","relationType":"closes","to":"#885"}
{"type":"relation","from":"marcuscastelo","relationType":"governed_by","to":"memory_governance_rules"}
{"type":"relation","from":"#885 Phase 4: UI Migration","relationType":"status","to":"merged"}
{"type":"relation","from":"marcuscastelo","relationType":"implemented","to":"Issue #850"}
{"type":"relation","from":"marcuscastelo","relationType":"implemented","to":"Issue #851"}