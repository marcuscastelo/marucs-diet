reportedBy: github-copilot.v1/code-review

# Session Learnings
- The session demonstrated the need for robust fallback strategies when the default PR diff or branch naming conventions do not work (e.g., when `origin/main` or `main` are not available, or when the PR diff is too large for the GitHub API).
- The audit process highlighted the importance of handling file paths with special characters or slashes when generating audit filenames.
- The session reinforced the value of including a `reportedBy` field for traceability in all outputs, especially in multi-agent workflows.
- The process surfaced the need for explicit instructions on handling non-text or binary files during code review audits.

# Prompt/Instruction Improvement Suggestions
- In `.github/prompts/code-review.prompt.md`, add fallback instructions for cases where the `gh` CLI or `git diff` commands fail due to large diffs or ambiguous base branches. Suggest using local git strategies and documenting the fallback process.
- In `.github/prompts/code-review.prompt.md`, clarify how to handle non-text or binary files in the audit process (e.g., skip, summarize, or flag for manual review).
- In `.github/prompts/code-review.prompt.md`, recommend sanitizing audit filenames to avoid issues with slashes or special characters in file paths.
- In `.github/prompts/end-session.prompt.md`, provide a template output for cases where no new learnings or improvements are found, ensuring consistent reporting.
- In `.github/prompts/end-session.prompt.md`, suggest a standard format for referencing specific files, sections, or lines in improvement suggestions to enhance clarity and traceability.
